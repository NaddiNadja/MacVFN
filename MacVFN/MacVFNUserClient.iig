//
//  MacVFNUserClient.iig
//  MacVFN
//
//  Created by Mads Ynddal on 24/11/2023.
//

#ifndef MacVFNUserClient_h
#define MacVFNUserClient_h

#include <Availability.h>
#include <DriverKit/IOLib.h>
#include <DriverKit/IOUserClient.iig>
#include <PCIDriverKit/IOPCIDevice.iig>

class MacVFNUserClient: public IOUserClient
{
protected:
    static kern_return_t StaticHandleNvmeInit(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    static kern_return_t StaticHandleNvmeOneshot(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    static kern_return_t StaticHandleNvmeCreateQueuePair(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    static kern_return_t StaticHandleNvmeDeleteQueuePair(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    static kern_return_t StaticHandleNvmeAllocBuffer(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    static kern_return_t StaticHandleNvmeDeallocBuffer(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    static kern_return_t StaticHandleNvmePoke(OSObject* target, void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;

    kern_return_t HandleNvmeInit(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t HandleNvmeOneshot(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t HandleNvmeCreateQueuePair(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t HandleNvmeDeleteQueuePair(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t HandleNvmeAllocBuffer(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t HandleNvmeDeallocBuffer(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
    kern_return_t HandleNvmePoke(void* reference, IOUserClientMethodArguments* arguments) LOCALONLY;
public:
    virtual bool init() override;
    virtual void free() override;
    virtual kern_return_t Start(IOService * provider) override;
    virtual kern_return_t Stop(IOService * provider) override;
    virtual kern_return_t ExternalMethod(uint64_t selector, IOUserClientMethodArguments* arguments, const IOUserClientMethodDispatch* dispatch, OSObject* target, void* reference) override;
    virtual kern_return_t CopyClientMemoryForType(uint64_t type, uint64_t *options, IOMemoryDescriptor **memory) override;
};

#endif /* MacVFNUserClient_h */
